/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2024-01-09 08:26:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class borrado_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Catálogo Completo</title>\n");
      out.write("    <style>\n");
      out.write("        table {\n");
      out.write("            border-collapse: collapse;\n");
      out.write("            width: 80%;\n");
      out.write("            margin: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        th, td {\n");
      out.write("            border: 1px solid #ddd;\n");
      out.write("            padding: 10px;\n");
      out.write("            text-align: left;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        th {\n");
      out.write("            background-color: #333;\n");
      out.write("            color: #fff;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .comprar-button {\n");
      out.write("            margin-top: 10px;\n");
      out.write("            padding: 10px;\n");
      out.write("            background-color: #4caf50;\n");
      out.write("            color: #fff;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 4px;\n");
      out.write("            cursor: pointer;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");

    Connection conn = null;
    Statement stmtJuegos = null;
    Statement stmtConsolas = null;
    ResultSet rsJuegos = null;
    ResultSet rsConsolas = null;

    try {
        Class.forName("com.mysql.jdbc.Driver");

        String url = "jdbc:mysql://localhost:3306/tienda_juegos";
        String user = "anibal";
        String password = "nico";
        conn = DriverManager.getConnection(url, user, password);

        // Consulta para juegos
        String queryJuegos = "SELECT * FROM juegos";
        stmtJuegos = conn.createStatement();
        rsJuegos = stmtJuegos.executeQuery(queryJuegos);

        // Consulta para consolas
        String queryConsolas = "SELECT * FROM consolas";
        stmtConsolas = conn.createStatement();
        rsConsolas = stmtConsolas.executeQuery(queryConsolas);

      out.write("\n");
      out.write("\n");
      out.write("<h1>Catálogo Completo</h1>\n");
      out.write("<form action=\"actualizarDatos\" method=\"post\">\n");
      out.write("    <table>\n");
      out.write("        <tr>\n");
      out.write("            <th>Nombre</th>\n");
      out.write("            <th>Compañía Desarrolladora</th>\n");
      out.write("            <th>Género / Potencia de la CPU</th>\n");
      out.write("            <th>Puntuación / Potencia de la GPU</th>\n");
      out.write("            <th>Precio</th>\n");
      out.write("            <th>Unidades Disponibles</th>\n");
      out.write("        </tr>\n");
      out.write("\n");
      out.write("        <!-- Muestra juegos -->\n");
      out.write("        ");

            while (rsJuegos.next()) {
        
      out.write("\n");
      out.write("        <tr>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsJuegos.getString("nombre") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsJuegos.getString("compania_desarrolladora") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsJuegos.getString("genero") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsJuegos.getInt("puntuacion_metacritic") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsJuegos.getDouble("precio") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsJuegos.getInt("unidades_disponibles") );
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        ");

            }
        
      out.write("\n");
      out.write("\n");
      out.write("        <!-- Muestra consolas -->\n");
      out.write("        ");

            while (rsConsolas.next()) {
        
      out.write("\n");
      out.write("        <tr>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsConsolas.getString("nombre") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsConsolas.getString("compania") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsConsolas.getFloat("frecuencia_cpu") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsConsolas.getFloat("frecuencia_gpu") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsConsolas.getDouble("precio") );
      out.write("</td>\n");
      out.write("            <td contentEditable=\"true\">");
      out.print( rsConsolas.getInt("unidades_disponibles") );
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        ");

            }
        
      out.write("\n");
      out.write("    </table>\n");
      out.write("    <button type=\"submit\" class=\"comprar-button\">Guardar Cambios</button>\n");
      out.write("</form>\n");
      out.write("\n");

    } catch (SQLException | ClassNotFoundException e) {
        e.printStackTrace();
        out.println("Error: " + e.getMessage());
    } finally {
        try {
            if (rsJuegos != null) rsJuegos.close();
            if (rsConsolas != null) rsConsolas.close();
            if (stmtJuegos != null) stmtJuegos.close();
            if (stmtConsolas != null) stmtConsolas.close();
            if (conn != null) conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
